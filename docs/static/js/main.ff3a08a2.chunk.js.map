{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","trim","length","category","alert","preventDefault","type","value","onChange","target","placeholder","getGifs","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4LAqCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,mCACI,uBAAMC,SAXO,SAACC,GACdH,EAAWI,OAAOC,OAAS,GAC3BP,GAAc,SAAAQ,GAAQ,OAAKN,GAAL,mBAAmBM,OACzCL,EAAc,KAEdM,MAAM,wBAEVJ,EAAEK,kBAIE,UACI,2CACA,uBACIC,KAAK,OACLC,MAAQV,EACRW,SApBU,SAACR,GACvBF,EAAcE,EAAES,OAAOF,QAoBXG,YAAY,iBAChB,uBAAOJ,KAAK,SAASC,MAAM,c,8BC3B9BI,EAAO,uCAAG,WAAQR,GAAR,uBAAAS,EAAA,6DACbC,EADa,iDACoCC,UAAWX,GAD/C,+DAEDY,MAAMF,GAFL,cAEbG,EAFa,gBAGIA,EAAIC,OAHR,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAY,OAAjB,UACI,qBAAKC,IAAQf,EAAMgB,IAAQN,IAC3B,4BAAKA,QCyBFO,EA3BC,SAAC,GAAkB,IAAhB3B,EAAe,EAAfA,SAGf,ECLwB,SAAEA,GAC1B,MAA0BP,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACNvB,EAAQR,GAAUgC,MAAK,SAAAC,GACfH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAC5B,IAGG6B,EDZ0BK,CAAclC,GAAlCqB,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAQrB,OACI,qCACI,mCAAM5B,EAAN,OACC4B,GAAW,mBAAGJ,UAAY,qCAAf,yBACX,qBAAKA,UAAY,YAAjB,SAEOH,EAAOJ,KAAI,SAAAC,GAAG,OACV,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBiB,IAAQjB,EAAIC,eEI3CiB,MAtBf,WAGE,MAAoC3C,mBAAS,IAA7C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAQA,OACE,qCACE,oBAAIgC,UAAU,oCAAd,4BACA,uBACA,cAAC,EAAD,CAAahC,cAAeA,IAC3B6C,EAAWpB,KAAI,SAAAjB,GAAQ,OACxB,cAAC,EAAD,CAASA,SAAUA,GAAeA,UChBxCsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ff3a08a2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n\n    }\n    const handleSubmit = (e) => {\n        if( inputValue.trim().length > 2){\n            setCategories(category => [inputValue,...category]);\n            setInputValue('');\n        }else{\n            alert('Please enter a value')\n        }\n        e.preventDefault();\n    }\n    return (\n        <>\n            <form onSubmit={ handleSubmit }>\n                <label>Search</label>\n                <input\n                    type=\"text\"\n                    value={ inputValue }\n                    onChange={ handleInputChange }\n                    placeholder=\"New Category\" />\n                <input type=\"submit\" value=\"Add\" />\n            </form>\n        </>\n    );\n\n}\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\nexport default AddCategory;\n","\nexport const getGifs = async ( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&lImit=20&api_key=1ywURhrBl5cdf1Eqb0nCB2PLVy7Yme9o`;\n    const res = await fetch(url);\n    const { data } = await res.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    });\n\n    return gifs;\n}","import React from 'react';\n\nexport const GifGridItem = ({title, url}) => {\n        \n    return (\n        <div className = 'card' >\n            <img src = { url } alt = { title } />\n            <p>{ title }</p>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport {GifGridItem} from './GifGridItem';\n\n\nconst GifGrid = ({ category }) => {\n\n\n    const { data:images, loading } = useFetchGifs( category );\n    \n    /*const [images, setImages] = useState([]);\n    \n    \n  \n*/\n\n    return (\n        <>\n            <h3> {category} </h3>\n            {loading && <p className = \"animate__animated  animate__shakeX\">Cargando...</p>}\n             <div className = \"container\">\n                {\n                    images.map(img => (\n                        <GifGridItem {...img} key = { img.id } />\n                    ))\n                }\n            </div>\n        </>\n    );\n\n}\n\nexport default GifGrid;","import { useState, useEffect } from 'react';\nimport {getGifs} from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category).then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n        });\n\n    }, [category]);\n\n\n    return state; //{data: [], loading: true}\n}","import React, { useState } from 'react';\nimport AddCategory from './AddCategory';\nimport GifGrid from './GifGrid';\n\n\nfunction GifExpertApp() {\n\n  //const categories = ['Dragon Ball', 'One Punch'];\n  const [categories, setCategories] = useState([]);\n  /*\n  \n  const handleAdd = () => {\n    setCategories(categories => [...categories, newCategory]);\n     \n  }\n  */\n  return (\n    <>\n      <h2 className=\"animate__animated animate__bounce\">Gif Expert App</h2>\n      <hr />\n      <AddCategory setCategories={setCategories} />\n      {categories.map(category => \n      <GifGrid category={category} key={category} />\n      )}\n    </>\n  );\n}\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n  );"],"sourceRoot":""}